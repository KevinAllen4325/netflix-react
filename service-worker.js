"use strict";var precacheConfig=[["/netflix-react/index.html","d5a70e85c60a8f3dcfe3b619b5cfca54"],["/netflix-react/static/css/main.37a22c1a.css","92ebafa028cbf6b696d46a34e2f9b5e6"],["/netflix-react/static/js/main.63c73374.js","9212c7c16c6b1c32342ba5e19237c730"],["/netflix-react/static/media/D.4fa51a13.jpg","4fa51a13454aaf30fb32b2d0bc3b6d50"],["/netflix-react/static/media/IAS.f9e1825b.jpg","f9e1825b584a098ee83ed003788953e9"],["/netflix-react/static/media/LK.f6e52e6a.jpg","f6e52e6a4498588972504fb785ecd6b1"],["/netflix-react/static/media/PandR.23868bf0.jpg","23868bf03e29cdd5f2230477b6586be6"],["/netflix-react/static/media/TLJ.865c334d.jpg","865c334d8fcb0a35dd10aec672cbf689"],["/netflix-react/static/media/TO.84833870.jpg","84833870e33f05d9e192685fdc5cb448"],["/netflix-react/static/media/TR.62340e93.jpg","62340e93f38d2c6dfbaef605364d8a2a"],["/netflix-react/static/media/d-poster.08448751.jpg","084487517f99587b9d4458d01040f57f"],["/netflix-react/static/media/ias-poster.92835b4d.jpg","92835b4d74b848fa744f77c76e4636da"],["/netflix-react/static/media/intertellar.c820b05d.jpg","c820b05d2bee6683075a49f2e0344a2e"],["/netflix-react/static/media/ints-poster.f8c6d9e4.jpg","f8c6d9e4b6039b96e09b1352621d79e9"],["/netflix-react/static/media/is.df1c8741.jpg","df1c87414b3f91f15f60273547fab31d"],["/netflix-react/static/media/lk-poster.563423c9.jpg","563423c9f663a2dda12ec66cddf49ec2"],["/netflix-react/static/media/par-poster.9e287d94.jpg","9e287d944c59c760e9e84e081518b55e"],["/netflix-react/static/media/stargate.b72ac474.jpg","b72ac4743a3b691a991d5ba6caa39227"],["/netflix-react/static/media/stepbrothers.4fed34a8.jpg","4fed34a850652c0ea2b6002828f10ed7"],["/netflix-react/static/media/tlj-poster.772fdb44.jpg","772fdb44514aa417c05f38e7f18a3009"],["/netflix-react/static/media/to-poster.626c98c5.jpg","626c98c5ecd3b8023373e8baceaffda8"],["/netflix-react/static/media/tr-poster.b0a8e637.jpg","b0a8e637f8f2c6ef2e42df44ad184374"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var r="/netflix-react/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});